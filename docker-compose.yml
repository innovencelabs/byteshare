version: '3.8'

x-logging-config: &logger-config
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
      labels: "service={{SERVICE_NAME}}"

services:
  traefik:
    image: traefik:v2.11.2
    container_name: byteshare-traefik
    restart: on-failure
    <<: *logger-config
    # security_opt:
    #   - no-new-privileges:true
    # command:
    #   - --api.insecure=true
    #   - --providers.docker=true
    #   - --accesslog=true
    #   - --providers.docker.exposedbydefault=false
    #   - --entrypoints.web.address=:80
    #   - --entrypoints.websecure.address=:443
    #   - --certificatesresolvers.sslresolver.acme.tlschallenge=true
    #   - --certificatesresolvers.sslresolver.acme.email=${EMAIL}
    #   - --certificatesresolvers.sslresolver.acme.storage=/certificates/acme.json
    ports:
      - "80:80"
      - "443:443"
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./reverse-proxy/config/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./reverse-proxy/config/conf/:/etc/traefik/conf/
      - ./reverse-proxy/certs/:/etc/traefik/certs/
    networks:
      - byteshare-network
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.api.rule=Host(`traefik.localhost`)"
    #   - "traefik.http.routers.api.service=api@internal"
    #   # - "traefik.http.routers.api.middlewares=auth"
    #   # - "traefik.http.middlewares.auth.basicauth.users=admin:$apr1$zwfRSHfs$BZc8EQ8YYYTyGVR51rt0i"
    #   - "traefik.http.routers.api.entrypoints=websecure"
    #   - "traefik.http.routers.api.tls=true"
    # networks:
    #   - byteshare-network
  byteshare-middleware:
    build:
      context: ./middleware
    image: byteshare-middleware:${BYTESHARE_VERSION}
    container_name: byteshare-middleware
    <<: *logger-config
    restart: unless-stopped
    depends_on:
      - traefik
    environment:
      - WEB_BASE_URL
      - RESEND_API_KEY
      - R2_ACCOUNT_ID
      - R2_ACCESS_KEY
      - R2_SECRET_KEY
      - APPWRITE_URL
      - APPWRITE_PROJECT_ID
      - AWS_APP_REGION
      - AWS_APP_ACCESS_KEY
      - AWS_APP_SECRET_ACCESS_KEY
    labels:
      - "traefik.enable=true"
      # - "traefik.http.routers.backend-router.rule=Host(`api.localhost`)"
      # - "traefik.http.routers.byteshare-middleware.entrypoints=https"
    networks:
      - byteshare-network
  byteshare-ui:
    build:
      context: ./ui
    image: byteshare-ui:${BYTESHARE_VERSION}
    container_name: byteshare-ui
    <<: *logger-config
    restart: unless-stopped
    depends_on:
      - byteshare-middleware
      - traefik
    environment:
      - NEXT_PUBLIC_API_BASE_URL
      - NEXT_PUBLIC_APP_URL=${WEB_BASE_URL}
      - NEXT_PUBLIC_APPWRITE_URL=${APPWRITE_URL}
      - NEXT_PUBLIC_APPWRITE_PROJECT_ID
      - NEXT_PUBLIC_API_KEY
    ports:
      - 3000:3000
    labels:
      - "traefik.enable=true"
      # - "traefik.http.routers.byteshare-ui.rule=Host(`ui.localhost`)"
      # - "traefik.http.routers.byteshare-ui.entrypoints=websecure"
    networks:
      - byteshare-network
  # byteshare-cert-manager:
  #   build:
  #     context: ./certificates/manager
  #   image: byteshare-cert-manager:${BYTESHARE_VERSION}
  #   container_name: byteshare-cert-manager
  #   <<: *logger-config
  #   volumes:
  #     - ./certificates:/certificates:rw
  #   environment:
  #     - TRAEFIK_API_URL=http://traefik:8080
  #     - DOMAIN_NAME=localhost
  #   depends_on:
  #     - traefik
  #   networks:
  #     - proxy
  
networks:
  byteshare-network:
    driver: bridge